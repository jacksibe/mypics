{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/gallery.js","src/resources/data/mypics.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","loginError","message","showLogin","showRegister","user","firstName","lastName","email","password","registerError","save","console","log","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","List","mygallery","mypics","parse","getItem","showing","getgallery","activate","getUserMygallery","_id","showPhotos","getUserMypics","createGallery","myGalleryObj","gallery","description","userId","createPhotos","mypicObj","galleryId","saveGallery","alert","editMyGallery","editPhotos","deleteMyGallery","deleteMypic","deletePhotos","back","backToMyGallery","backPhotos","changeFiles","filesToUpload","Array","push","files","removeFile","index","splice","savePhotos","savePhoto","mypicId","length","uploadFile","logout","removeItem","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Mygallery","MYGALLERY_SERVICE","mygalleryArray","id","i","MyPics","MYPIC_SERVICE","mypicsArray","Gallery_service","mypic","formData","FormData","forEach","item","append","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","completed","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      { \n\troute: ['', 'home'],\n\t moduleId: './modules/home',\n\t name: 'Home' \n      },\n      {\n\t route: 'list',\n\t moduleId: './modules/list',\n   name: 'List' ,\n   auth: true \n     }\n    ]);\n  }\n}\n\n","var authConfig = {\n    baseUrl: \"http://localhost:5000/api\",\n    loginUrl: '/users/login',\n    tokenName: 'token',\n    authHeader: 'Authorization',\n    authToken: '',\n    logoutRedirect: '#/home'\n  }\n  \n  export default authConfig;\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\n\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({  warnings: {    wForgottenReturn: false  }});\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n    })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\n\nimport {inject} from 'aurelia-framework'; \nimport {Router} from 'aurelia-router';\nimport { Users } from '../resources/data/users';   \nimport {AuthService} from 'aurelia-auth';  \n\n@inject(Router, Users, AuthService)\nexport class Home {\n\n  constructor(router, users, auth) {\n    this.router = router;\n    this.auth = auth;\n    this.loginError = '';     \n    this.users = users;\n    this.message = 'Home';\n    this.showLogin = true;\n  }\n\n  showRegister(){\n    this.user = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\"\n      }\n      this.registerError = \"\";\n      \n    this.showLogin = false;\n  }\n   async save() {\n   console.log (this.user);\n          let serverResponse = await this.users.save(this.user);\n          if (!serverResponse.error) {\n            this.showLogin = true;\n          } else {\n            this.registerError = \"There was a problem registering the user.\"\n          }\n    }\n   \n\n  login(){\n    return this.auth.login(this.email, this.password)\n    .then(response => {\n      sessionStorage.setItem(\"user\", JSON.stringify(response.user));\n      this.loginError = \"\";  \n      this.router.navigate('list');\n    })\n   .catch(error => {\n    console.log(error);\n    this.loginError = \"Invalid credentials.\";\n  });\n};\n\n}\n","import {inject} from 'aurelia-framework'; \nimport {MyPics} from '../resources/data/mypics';\nimport {Mygallery} from '../resources/data/gallery';  \nimport {Router} from 'aurelia-router';\nimport { AuthService } from 'aurelia-auth';    \n\n\n\n    @inject(Router, Mygallery, MyPics, AuthService)\n    export class List {\n      constructor(router, mygallery, mypics, auth) {\n      this.mypics = mypics;\n      this.router = router;\n      this.mygallery = mygallery;\n      this.message = 'home';\n      this.auth = auth;\n      this.user = JSON.parse(sessionStorage.getItem('user'));\n      this.showing = \"mypicList\";\n      this.getgallery = JSON.parse(sessionStorage.getItem('mygallery'));\n\n\n }\n\n async activate() {\n    await this.mygallery.getUserMygallery(this.user._id);\n  }\n\n          \n  async showPhotos(mygallery){\n    sessionStorage.setItem(\"mygallery\", JSON.stringify(mygallery));\n    await this.mypics.getUserMypics(JSON.parse(sessionStorage.getItem('mygallery'))._id);\n    this.showing = \"photoList\";\n      }\n      \n\ncreateGallery(){\t\n    this.myGalleryObj = {\n        gallery: \"\",\n  description: \"\",\n        userId: this.user._id,\n    \n    }\n    this.showing = 'mypicForm';\t\t     \n    }\n\n\n    \n    createPhotos(){\t\n\t\tthis.mypicObj = {\n            galleryId: this.getgallery._id\n        }\n\t\tthis.showing = 'photoForm';\t\t\n  }\n\n\n    async saveGallery(){\n\t\tif(this.myGalleryObj){\t\t\n\t\t\tlet response = await this.mygallery.save(this.myGalleryObj);\n\t\t\tif(response.error){\n\t\t\t\talert(\"There was an error creating the Gallery\");\n\t\t\t} else {\n\t\t\t\t\n                        }\n          \n\t\t\t}\n\t\t\tthis.showing = \"mypicList\";\n\t\t}\n  \n\n        editMyGallery(mygallery) {\n            this.myGalleryObj = mygallery;\n            this.showing = 'mypicForm';\n        } \n\n    editPhotos(mypics){\n             this.mypicObj = mypics;\n              this.showing = 'photoForm';\t\n    }\n\n       deleteMyGallery(mygallery){\n              this.mygallery.deleteMypic(mygallery._id);\n          }\n\n      deletePhotos(mypics){\n                this.mypics.deleteMypic(mypics._id);\n            }\n      \n      back(){\n        this.showing = \"mypicList\";\n    }\n\n    backToMyGallery(){\n        this.showing = \"mypicList\";\n    }\n\n    backPhotos(){\n      this.showing = \"photoList\";\n  }\n        \n\n        changeFiles(){\n        this.filesToUpload = new Array(); \n        this.filesToUpload.push(this.files[0]);\n            }\n        removeFile(index){\n        this.filesToUpload.splice(index,1);\n            }\n                        \n        async savePhotos(){\n                if(this.mypicObj){\t\t\n                    let response = await this.mypics.savePhoto(this.mypicObj);\n                    if(response.error){\n                        alert(\"There was an error creating the Mypic\");\n                    } else {\n                            var mypicId = response._id;\n                            var galleryId = response.galleryId;\n                                if(this.filesToUpload && this.filesToUpload.length){\n                                    await this.mypics.uploadFile(this.filesToUpload, galleryId, mypicId);\n                                    this.filesToUpload = [];\n                                }\n                  \n                    }\n                    this.showing = \"photoList\";\n                }\n          }\n\n \n\n  logout(){\n     sessionStorage.removeItem('user');\n     this.auth.logout();\n\n  }\n}\n\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './value-converters/completed',\n    './elements/flatpickr'\n  ]);\n}\n","import { inject } from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n    constructor(http) {\n        this.httpClient = http;\n\n        this.BASE_URL = \"http://localhost:5000/api/\";\n\n        this.httpClient.configure(config => {\n            config\n                .withBaseUrl(this.BASE_URL)\n                .withDefaults({\n                credentials: 'same-origin',\n                headers: {\n                    'Accept': 'application/json',\n                    'X-Requested-With': 'Fetch'\n                }\n                })\n                .withInterceptor({\n                request(request) {\n                    console.log(`Requesting ${request.method} ${request.url}`);\n                    return request;\n                },\n                response(response) {\n                    console.log(`Received ${response.status} ${response.url}`);\n                    return response;\n                }\n                });\n            });\n\n            \n    }\n\n    get(url) {\n        return this.httpClient.fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                return data;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n    post(content, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'post',\n                body: json(content)\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n    put(content, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'put',\n                body: json(content)\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n    delete(url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'delete'\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error ;\n            });\n    }\n    uploadFiles(files, url){\n            return this.httpClient\n            .fetch(url, {\n                method: 'post',\n                body: files\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n        }\n        \n}\n","import { inject } from 'aurelia-framework';\nimport { DataServices } from './data-services';\n\n@inject(DataServices)\nexport class Mygallery {\n    constructor(data) {\n        this.data = data;\n        this.MYGALLERY_SERVICE = 'Galleries';\n        this.mygalleryArray = [];\n\n    }\n\n /* async getPhotos(id){\n        let response = await this.data.get(this.MYGALLERY_SERVICE + \"/\" + id);\n        if (!response.error && !response.message) {\n            this.mygalleryArray = response;\n        }\n            }*/\n            \n    async getUserMygallery(id) {\n        let response = await this.data.get(this.MYGALLERY_SERVICE + \"/\" + id);\n        if (!response.error && !response.message) {\n            this.mygalleryArray = response;\n        }\n    }\n\n    async save(mygallery) {\n            if (mygallery) {\n            if (!mygallery._id) {\n                let serverResponse = await this.data.post(mygallery, this.MYGALLERY_SERVICE);\n                if (!serverResponse.error) {\n                    this.mygalleryArray.push(serverResponse);\n                }\n                return serverResponse;\n             } else {\n                let serverResponse = await this.data.put(mygallery, this.MYGALLERY_SERVICE + \"/\" + mygallery._id);\n                if (!serverResponse.error) {\n                    // this.updateArray(response);\n                }\n                return serverResponse;\n            }\n        }\n\n\n    }\n\n    async deleteMypic(id) {\n        let serverResponse = await this.data.delete(this.MYGALLERY_SERVICE + \"/\" + id);\n        if (!serverResponse.error) {\n            for (let i = 0; i < this.mygalleryArray.length; i++) {\n                if (this.mygalleryArray[i]._id === id) {\n                    this.mygalleryArray.splice(i, 1);\n                }\n            }\n        }\n    }\n\n        \n}","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\n        export class MyPics {\n            constructor(data) {\n                this.data = data;\n                this.MYPIC_SERVICE = 'mypics';\n                this.mypicsArray = [];\n                this.Gallery_service = 'Galleries';\n        \n            }\n\n\n\n\n        async savePhoto(mypic) {\n            console.log(mypic)\n            if (mypic) {\n                if (!mypic._id) {\n                    let serverResponse = await this.data.post(mypic, this.MYPIC_SERVICE);\n                    if (!serverResponse.error) {\n                        this.mypicsArray.push(serverResponse);\n                    }\n                    return serverResponse;\n                 } else {\n                    let serverResponse = await this.data.put(mypic, this.MYPIC_SERVICE + \"/\" + mypic._id);\n                    if (!serverResponse.error) {\n                        // this.updateArray(response);\n                    }\n                    return serverResponse;\n                }\n            }\n    \n    \n        }\n    \n        /*async deleteTodo(id){\n            let serverResponse = await this.data.delete(this.TODO_SERVICE + \"/\" + id);\n            if(!serverResponse.error){\n                for(let i = 0; i < this.todosArray.length; i++){\n                    if(this.todosArray[i]._id === id){\n                        this.todosArray.splice(i,1);\n                    }\n                }\n            }\n        }*/\n\n        async deleteMypic(id) {\n            let serverResponse = await this.data.delete(\"Mypics\" + \"/\" + id);\n            if (!serverResponse.error) {\n                for (let i = 0; i < this.mypicsArray.length; i++) {\n                    if (this.mypicsArray[i]._id === id) {\n                        this.mypicsArray.splice(i, 1);\n                    }\n                }\n            }\n        }\n\n  \n        /*async uploadFile(files, userId, todoId){\n                    let formData = new FormData();\n                   files.forEach((item, index) => {\n                formData.append(\"file\" + index, item);\n                    });\n                \n                let serverResponse = await this.data.uploadFiles(formData, this.TODO_SERVICE + \"/upload/\" + userId + \"/\" + todoId);\n                return serverResponse;\n            }\n            \n    }*/\n\n\n    async uploadFile(files, galleryId, mypicId){\n        let formData = new FormData();\n        files.forEach((item, index) => {\n    formData.append(\"file\" + index, item);\n        });\n    \n    let serverResponse = await this.data.uploadFiles(formData, this.Gallery_service + \"/upload/\" + galleryId + \"/\" + mypicId);\n    return serverResponse;\n}\n\nasync getUserMypics(galleryId) {\n    let response = await this.data.get(\"Mypics\" + \"/user/\" + galleryId);\n    if (!response.error && !response.message) {\n        this.mypicsArray = response;\n    }\n}\n\n}\n\n\n    ","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\nexport class Users {\n\nconstructor(data) {\n        this.data = data;\n        this.USER_SERVICE = 'users';\n    }\n\nasync save(user){\n    if(user){\n  let serverResponse = await this.data.post(user, this.USER_SERVICE);\n         return serverResponse;\n }\n}\n\n\n}\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\nimport Flatpickr from 'flatpickr';\n@inject(Element)\nexport class FlatPickerCustomElement {\n@bindable({defaultBindingMode: bindingMode.twoWay}) value;\nconstructor(element) {\n  this.element = element;\n}\nbind() {\n            const defaultConfig = {\n                \taltInput: true,\n                \taltFormat: \"F j, Y\",\n        wrap: true\n            };\n            this._config = Object.assign({}, defaultConfig);\n            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\n        }\n    attached() {\n                this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\n         }\n        onChange(selectedDates, dateStr, instance) {\n                this.value = selectedDates[0] \n        }\n        \n        valueChanged() {\n                if (!this.flatpickr) {\n                    return;\n                }\n                if (this.value === this.flatpickr.selectedDates[0]){\n                    return;\n                }\n               let newDate = this.value ? this.value : undefined;      \n               this.flatpickr.setDate(newDate);\n            }\n            } ","export class CompletedValueConverter {\n    \n     toView(array, value) {\n       if(!value){\n        return array.filter(item => {\n          return !item.completed;\n        })\n       } else {\n         return array;\n       }\n     }\n    }","import moment from 'moment';\nexport class DateFormatValueConverter {\ntoView(value, format = 'MMM Do YYYY') {\nif(value === undefined || value === null){\n\treturn;\n    \t\t}\n    \n    \t\treturn moment(value).format(format);\n\t}\n}"],"sourceRoot":".."}